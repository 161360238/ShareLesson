<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pdsu.mapper.MessageMapper" >

    <resultMap id="BaseResultMap" type="com.pdsu.pojo.Message" >
        <id column="m_id" property="mId" jdbcType="VARCHAR" />
        <result column="created" property="created" jdbcType="TIMESTAMP" />
        <result column="from_id" property="fromId" jdbcType="VARCHAR" />
        <result column="own_id" property="ownId" jdbcType="VARCHAR" />
        <result column="l_id" property="lId" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="content" property="content" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        m_id, created, from_id, own_id, l_id, status, content
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pdsu.pojo.MessageExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from message
        where m_id = #{mId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from message
        where m_id = #{mId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByExample" parameterType="com.pdsu.pojo.MessageExample" >
        delete from message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.pdsu.pojo.Message" >
        insert into message (m_id, created, from_id, 
            own_id, l_id, status, 
            content)
        values (#{mId,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{fromId,jdbcType=VARCHAR}, 
            #{ownId,jdbcType=VARCHAR}, #{lId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
            #{content,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.pdsu.pojo.Message" >
        insert into message
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="mId != null" >
                m_id,
            </if>
            <if test="created != null" >
                created,
            </if>
            <if test="fromId != null" >
                from_id,
            </if>
            <if test="ownId != null" >
                own_id,
            </if>
            <if test="lId != null" >
                l_id,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="content != null" >
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="mId != null" >
                #{mId,jdbcType=VARCHAR},
            </if>
            <if test="created != null" >
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="fromId != null" >
                #{fromId,jdbcType=VARCHAR},
            </if>
            <if test="ownId != null" >
                #{ownId,jdbcType=VARCHAR},
            </if>
            <if test="lId != null" >
                #{lId,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                #{content,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.pdsu.pojo.MessageExample" resultType="java.lang.Integer" >
        select count(*) from message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update message
        <set >
            <if test="record.mId != null" >
                m_id = #{record.mId,jdbcType=VARCHAR},
            </if>
            <if test="record.created != null" >
                created = #{record.created,jdbcType=TIMESTAMP},
            </if>
            <if test="record.fromId != null" >
                from_id = #{record.fromId,jdbcType=VARCHAR},
            </if>
            <if test="record.ownId != null" >
                own_id = #{record.ownId,jdbcType=VARCHAR},
            </if>
            <if test="record.lId != null" >
                l_id = #{record.lId,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.content != null" >
                content = #{record.content,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update message
        set m_id = #{record.mId,jdbcType=VARCHAR},
            created = #{record.created,jdbcType=TIMESTAMP},
            from_id = #{record.fromId,jdbcType=VARCHAR},
            own_id = #{record.ownId,jdbcType=VARCHAR},
            l_id = #{record.lId,jdbcType=VARCHAR},
            status = #{record.status,jdbcType=INTEGER},
            content = #{record.content,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.pdsu.pojo.Message" >
        update message
        <set >
            <if test="created != null" >
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="fromId != null" >
                from_id = #{fromId,jdbcType=VARCHAR},
            </if>
            <if test="ownId != null" >
                own_id = #{ownId,jdbcType=VARCHAR},
            </if>
            <if test="lId != null" >
                l_id = #{lId,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=VARCHAR},
            </if>
        </set>
        where m_id = #{mId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.pdsu.pojo.Message" >
        update message
        set created = #{created,jdbcType=TIMESTAMP},
            from_id = #{fromId,jdbcType=VARCHAR},
            own_id = #{ownId,jdbcType=VARCHAR},
            l_id = #{lId,jdbcType=VARCHAR},
            status = #{status,jdbcType=INTEGER},
            content = #{content,jdbcType=VARCHAR}
        where m_id = #{mId,jdbcType=VARCHAR}
    </update>
</mapper>