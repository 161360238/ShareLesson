<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pdsu.mapper.userMapper" >

    <resultMap id="BaseResultMap" type="com.pdsu.pojo.user" >
        <id column="u_id" property="uId" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="salty" property="salty" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="INTEGER" />
        <result column="department" property="department" jdbcType="VARCHAR" />
        <result column="identity" property="identity" jdbcType="INTEGER" />
        <result column="introduction" property="introduction" jdbcType="VARCHAR" />
        <result column="pic" property="pic" jdbcType="VARCHAR" />
        <result column="signature" property="signature" jdbcType="VARCHAR" />
        <result column="nicname" property="nicname" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="role" property="role" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        u_id, username, password, salty, name, sex, department, identity, introduction, pic, 
        signature, nicname, email, role
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pdsu.pojo.userExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from user
        where u_id = #{uId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from user
        where u_id = #{uId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByExample" parameterType="com.pdsu.pojo.userExample" >
        delete from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.pdsu.pojo.user" >
        insert into user (u_id, username, password, 
            salty, name, sex, 
            department, identity, introduction, 
            pic, signature, nicname, 
            email, role)
        values (#{uId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
            #{salty,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
            #{department,jdbcType=VARCHAR}, #{identity,jdbcType=INTEGER}, #{introduction,jdbcType=VARCHAR}, 
            #{pic,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, #{nicname,jdbcType=VARCHAR}, 
            #{email,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.pdsu.pojo.user" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="uId != null" >
                u_id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="salty != null" >
                salty,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="sex != null" >
                sex,
            </if>
            <if test="department != null" >
                department,
            </if>
            <if test="identity != null" >
                identity,
            </if>
            <if test="introduction != null" >
                introduction,
            </if>
            <if test="pic != null" >
                pic,
            </if>
            <if test="signature != null" >
                signature,
            </if>
            <if test="nicname != null" >
                nicname,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="role != null" >
                role,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="uId != null" >
                #{uId,jdbcType=VARCHAR},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salty != null" >
                #{salty,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="department != null" >
                #{department,jdbcType=VARCHAR},
            </if>
            <if test="identity != null" >
                #{identity,jdbcType=INTEGER},
            </if>
            <if test="introduction != null" >
                #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="pic != null" >
                #{pic,jdbcType=VARCHAR},
            </if>
            <if test="signature != null" >
                #{signature,jdbcType=VARCHAR},
            </if>
            <if test="nicname != null" >
                #{nicname,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="role != null" >
                #{role,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.pdsu.pojo.userExample" resultType="java.lang.Integer" >
        select count(*) from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update user
        <set >
            <if test="record.uId != null" >
                u_id = #{record.uId,jdbcType=VARCHAR},
            </if>
            <if test="record.username != null" >
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null" >
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.salty != null" >
                salty = #{record.salty,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null" >
                sex = #{record.sex,jdbcType=INTEGER},
            </if>
            <if test="record.department != null" >
                department = #{record.department,jdbcType=VARCHAR},
            </if>
            <if test="record.identity != null" >
                identity = #{record.identity,jdbcType=INTEGER},
            </if>
            <if test="record.introduction != null" >
                introduction = #{record.introduction,jdbcType=VARCHAR},
            </if>
            <if test="record.pic != null" >
                pic = #{record.pic,jdbcType=VARCHAR},
            </if>
            <if test="record.signature != null" >
                signature = #{record.signature,jdbcType=VARCHAR},
            </if>
            <if test="record.nicname != null" >
                nicname = #{record.nicname,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null" >
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.role != null" >
                role = #{record.role,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update user
        set u_id = #{record.uId,jdbcType=VARCHAR},
            username = #{record.username,jdbcType=VARCHAR},
            password = #{record.password,jdbcType=VARCHAR},
            salty = #{record.salty,jdbcType=VARCHAR},
            name = #{record.name,jdbcType=VARCHAR},
            sex = #{record.sex,jdbcType=INTEGER},
            department = #{record.department,jdbcType=VARCHAR},
            identity = #{record.identity,jdbcType=INTEGER},
            introduction = #{record.introduction,jdbcType=VARCHAR},
            pic = #{record.pic,jdbcType=VARCHAR},
            signature = #{record.signature,jdbcType=VARCHAR},
            nicname = #{record.nicname,jdbcType=VARCHAR},
            email = #{record.email,jdbcType=VARCHAR},
            role = #{record.role,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.pdsu.pojo.user" >
        update user
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salty != null" >
                salty = #{salty,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="department != null" >
                department = #{department,jdbcType=VARCHAR},
            </if>
            <if test="identity != null" >
                identity = #{identity,jdbcType=INTEGER},
            </if>
            <if test="introduction != null" >
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="pic != null" >
                pic = #{pic,jdbcType=VARCHAR},
            </if>
            <if test="signature != null" >
                signature = #{signature,jdbcType=VARCHAR},
            </if>
            <if test="nicname != null" >
                nicname = #{nicname,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="role != null" >
                role = #{role,jdbcType=VARCHAR},
            </if>
        </set>
        where u_id = #{uId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.pdsu.pojo.user" >
        update user
        set username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            salty = #{salty,jdbcType=VARCHAR},
            name = #{name,jdbcType=VARCHAR},
            sex = #{sex,jdbcType=INTEGER},
            department = #{department,jdbcType=VARCHAR},
            identity = #{identity,jdbcType=INTEGER},
            introduction = #{introduction,jdbcType=VARCHAR},
            pic = #{pic,jdbcType=VARCHAR},
            signature = #{signature,jdbcType=VARCHAR},
            nicname = #{nicname,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            role = #{role,jdbcType=VARCHAR}
        where u_id = #{uId,jdbcType=VARCHAR}
    </update>
</mapper>