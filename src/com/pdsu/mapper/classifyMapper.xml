<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pdsu.mapper.classifyMapper" >

    <resultMap id="BaseResultMap" type="com.pdsu.pojo.classify" >
        <id column="classify_id" property="classifyId" jdbcType="VARCHAR" />
        <result column="pid" property="pid" jdbcType="VARCHAR" />
        <result column="classify_name" property="classifyName" jdbcType="VARCHAR" />
        <result column="classify_sort" property="classifySort" jdbcType="INTEGER" />
        <result column="classify_status" property="classifyStatus" jdbcType="INTEGER" />
        <result column="is_parent" property="isParent" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        classify_id, pid, classify_name, classify_sort, classify_status, is_parent
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pdsu.pojo.classifyExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from classify
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from classify
        where classify_id = #{classifyId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from classify
        where classify_id = #{classifyId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByExample" parameterType="com.pdsu.pojo.classifyExample" >
        delete from classify
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.pdsu.pojo.classify" >
        insert into classify (classify_id, pid, classify_name, 
            classify_sort, classify_status, is_parent
            )
        values (#{classifyId,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, #{classifyName,jdbcType=VARCHAR}, 
            #{classifySort,jdbcType=INTEGER}, #{classifyStatus,jdbcType=INTEGER}, #{isParent,jdbcType=INTEGER}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.pdsu.pojo.classify" >
        insert into classify
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="classifyId != null" >
                classify_id,
            </if>
            <if test="pid != null" >
                pid,
            </if>
            <if test="classifyName != null" >
                classify_name,
            </if>
            <if test="classifySort != null" >
                classify_sort,
            </if>
            <if test="classifyStatus != null" >
                classify_status,
            </if>
            <if test="isParent != null" >
                is_parent,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="classifyId != null" >
                #{classifyId,jdbcType=VARCHAR},
            </if>
            <if test="pid != null" >
                #{pid,jdbcType=VARCHAR},
            </if>
            <if test="classifyName != null" >
                #{classifyName,jdbcType=VARCHAR},
            </if>
            <if test="classifySort != null" >
                #{classifySort,jdbcType=INTEGER},
            </if>
            <if test="classifyStatus != null" >
                #{classifyStatus,jdbcType=INTEGER},
            </if>
            <if test="isParent != null" >
                #{isParent,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.pdsu.pojo.classifyExample" resultType="java.lang.Integer" >
        select count(*) from classify
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update classify
        <set >
            <if test="record.classifyId != null" >
                classify_id = #{record.classifyId,jdbcType=VARCHAR},
            </if>
            <if test="record.pid != null" >
                pid = #{record.pid,jdbcType=VARCHAR},
            </if>
            <if test="record.classifyName != null" >
                classify_name = #{record.classifyName,jdbcType=VARCHAR},
            </if>
            <if test="record.classifySort != null" >
                classify_sort = #{record.classifySort,jdbcType=INTEGER},
            </if>
            <if test="record.classifyStatus != null" >
                classify_status = #{record.classifyStatus,jdbcType=INTEGER},
            </if>
            <if test="record.isParent != null" >
                is_parent = #{record.isParent,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update classify
        set classify_id = #{record.classifyId,jdbcType=VARCHAR},
            pid = #{record.pid,jdbcType=VARCHAR},
            classify_name = #{record.classifyName,jdbcType=VARCHAR},
            classify_sort = #{record.classifySort,jdbcType=INTEGER},
            classify_status = #{record.classifyStatus,jdbcType=INTEGER},
            is_parent = #{record.isParent,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.pdsu.pojo.classify" >
        update classify
        <set >
            <if test="pid != null" >
                pid = #{pid,jdbcType=VARCHAR},
            </if>
            <if test="classifyName != null" >
                classify_name = #{classifyName,jdbcType=VARCHAR},
            </if>
            <if test="classifySort != null" >
                classify_sort = #{classifySort,jdbcType=INTEGER},
            </if>
            <if test="classifyStatus != null" >
                classify_status = #{classifyStatus,jdbcType=INTEGER},
            </if>
            <if test="isParent != null" >
                is_parent = #{isParent,jdbcType=INTEGER},
            </if>
        </set>
        where classify_id = #{classifyId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.pdsu.pojo.classify" >
        update classify
        set pid = #{pid,jdbcType=VARCHAR},
            classify_name = #{classifyName,jdbcType=VARCHAR},
            classify_sort = #{classifySort,jdbcType=INTEGER},
            classify_status = #{classifyStatus,jdbcType=INTEGER},
            is_parent = #{isParent,jdbcType=INTEGER}
        where classify_id = #{classifyId,jdbcType=VARCHAR}
    </update>
</mapper>